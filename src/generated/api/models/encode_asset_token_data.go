// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EncodeAssetTokenData encode asset token data
//
// swagger:model EncodeAssetTokenData
type EncodeAssetTokenData struct {

	// Blueprint information of the token to be encoded. Used if token is mintable.
	Blueprint string `json:"blueprint,omitempty"`

	// ID of the token to be encoded. Used if token is mintable.
	ID string `json:"id,omitempty"`

	// Contract address of the token to be encoded
	TokenAddress string `json:"token_address,omitempty"`

	// TokenId of the token to be encoded. Used if token is non-mintable
	TokenID string `json:"token_id,omitempty"`
}

// Validate validates this encode asset token data
func (m *EncodeAssetTokenData) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this encode asset token data based on context it is used
func (m *EncodeAssetTokenData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EncodeAssetTokenData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EncodeAssetTokenData) UnmarshalBinary(b []byte) error {
	var res EncodeAssetTokenData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
