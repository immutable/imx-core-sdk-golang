// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MintFee mint fee
//
// swagger:model MintFee
type MintFee struct {

	// Fee percentage
	// Required: true
	// Maximum: 100
	Percentage *float64 `json:"percentage"`

	// Recipient wallet address
	// Required: true
	Recipient *string `json:"recipient"`
}

// Validate validates this mint fee
func (m *MintFee) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePercentage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRecipient(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MintFee) validatePercentage(formats strfmt.Registry) error {

	if err := validate.Required("percentage", "body", m.Percentage); err != nil {
		return err
	}

	if err := validate.Maximum("percentage", "body", *m.Percentage, 100, false); err != nil {
		return err
	}

	return nil
}

func (m *MintFee) validateRecipient(formats strfmt.Registry) error {

	if err := validate.Required("recipient", "body", m.Recipient); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this mint fee based on context it is used
func (m *MintFee) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MintFee) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MintFee) UnmarshalBinary(b []byte) error {
	var res MintFee
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
