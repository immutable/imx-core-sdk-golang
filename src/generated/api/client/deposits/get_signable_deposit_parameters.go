// Code generated by go-swagger; DO NOT EDIT.

package deposits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"immutable.com/imx-core-sdk-golang/api/models"
)

// NewGetSignableDepositParams creates a new GetSignableDepositParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSignableDepositParams() *GetSignableDepositParams {
	return &GetSignableDepositParams{
		timeout:                cr.DefaultTimeout,
		AdditionalHeaderParams: make(map[string]string),
	}
}

// NewGetSignableDepositParamsWithTimeout creates a new GetSignableDepositParams object
// with the ability to set a timeout on a request.
func NewGetSignableDepositParamsWithTimeout(timeout time.Duration) *GetSignableDepositParams {
	return &GetSignableDepositParams{
		timeout:                timeout,
		AdditionalHeaderParams: make(map[string]string),
	}
}

// NewGetSignableDepositParamsWithContext creates a new GetSignableDepositParams object
// with the ability to set a context for a request.
func NewGetSignableDepositParamsWithContext(ctx context.Context) *GetSignableDepositParams {
	return &GetSignableDepositParams{
		Context:                ctx,
		AdditionalHeaderParams: make(map[string]string),
	}
}

// NewGetSignableDepositParamsWithHTTPClient creates a new GetSignableDepositParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSignableDepositParamsWithHTTPClient(client *http.Client) *GetSignableDepositParams {
	return &GetSignableDepositParams{
		HTTPClient:             client,
		AdditionalHeaderParams: make(map[string]string),
	}
}

/* GetSignableDepositParams contains all the parameters to send to the API endpoint
   for the get signable deposit operation.

   Typically these are written to a http.Request.
*/
type GetSignableDepositParams struct {

	/* GetSignableDepositRequest.

	   Get details of signable deposit
	*/
	GetSignableDepositRequest *models.GetSignableDepositRequest

	AdditionalHeaderParams map[string]string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get signable deposit params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSignableDepositParams) WithDefaults() *GetSignableDepositParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get signable deposit params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSignableDepositParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get signable deposit params
func (o *GetSignableDepositParams) WithTimeout(timeout time.Duration) *GetSignableDepositParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get signable deposit params
func (o *GetSignableDepositParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get signable deposit params
func (o *GetSignableDepositParams) WithContext(ctx context.Context) *GetSignableDepositParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get signable deposit params
func (o *GetSignableDepositParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// AddCustomHeader provides option to add custom header parameters to get signable deposit params.
func (o *GetSignableDepositParams) AddCustomHeader(key string, value string) {
	o.AdditionalHeaderParams[key] = value
}

// WithHTTPClient adds the HTTPClient to the get signable deposit params
func (o *GetSignableDepositParams) WithHTTPClient(client *http.Client) *GetSignableDepositParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get signable deposit params
func (o *GetSignableDepositParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGetSignableDepositRequest adds the getSignableDepositRequest to the get signable deposit params
func (o *GetSignableDepositParams) WithGetSignableDepositRequest(getSignableDepositRequest *models.GetSignableDepositRequest) *GetSignableDepositParams {
	o.SetGetSignableDepositRequest(getSignableDepositRequest)
	return o
}

// SetGetSignableDepositRequest adds the getSignableDepositRequest to the get signable deposit params
func (o *GetSignableDepositParams) SetGetSignableDepositRequest(getSignableDepositRequest *models.GetSignableDepositRequest) {
	o.GetSignableDepositRequest = getSignableDepositRequest
}

// WriteToRequest writes these params to a swagger request
func (o *GetSignableDepositParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}

	for key, val := range o.AdditionalHeaderParams {
		if err := r.SetHeaderParam(key, val); err != nil {
			return err
		}
	}

	// Add SDK version header.
	if err := r.SetHeaderParam("x-sdk-version", "imx-core-sdk-golang-0.1.0"); err != nil {
		return err
	}

	var res []error
	if o.GetSignableDepositRequest != nil {
		if err := r.SetBodyParam(o.GetSignableDepositRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
