// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAssetParams creates a new GetAssetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAssetParams() *GetAssetParams {
	return &GetAssetParams{
		timeout:                cr.DefaultTimeout,
		AdditionalHeaderParams: make(map[string]string),
	}
}

// NewGetAssetParamsWithTimeout creates a new GetAssetParams object
// with the ability to set a timeout on a request.
func NewGetAssetParamsWithTimeout(timeout time.Duration) *GetAssetParams {
	return &GetAssetParams{
		timeout:                timeout,
		AdditionalHeaderParams: make(map[string]string),
	}
}

// NewGetAssetParamsWithContext creates a new GetAssetParams object
// with the ability to set a context for a request.
func NewGetAssetParamsWithContext(ctx context.Context) *GetAssetParams {
	return &GetAssetParams{
		Context:                ctx,
		AdditionalHeaderParams: make(map[string]string),
	}
}

// NewGetAssetParamsWithHTTPClient creates a new GetAssetParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAssetParamsWithHTTPClient(client *http.Client) *GetAssetParams {
	return &GetAssetParams{
		HTTPClient:             client,
		AdditionalHeaderParams: make(map[string]string),
	}
}

/* GetAssetParams contains all the parameters to send to the API endpoint
   for the get asset operation.

   Typically these are written to a http.Request.
*/
type GetAssetParams struct {

	/* IncludeFees.

	   Set flag to include fees associated with the asset
	*/
	IncludeFees *bool

	/* TokenAddress.

	   Address of the ERC721 contract
	*/
	TokenAddress string

	/* TokenID.

	   Either ERC721 token ID or internal IMX ID
	*/
	TokenID string

	AdditionalHeaderParams map[string]string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get asset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAssetParams) WithDefaults() *GetAssetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get asset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAssetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get asset params
func (o *GetAssetParams) WithTimeout(timeout time.Duration) *GetAssetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get asset params
func (o *GetAssetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get asset params
func (o *GetAssetParams) WithContext(ctx context.Context) *GetAssetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get asset params
func (o *GetAssetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// AddCustomHeader provides option to add custom header parameters to get asset params.
func (o *GetAssetParams) AddCustomHeader(key string, value string) {
	o.AdditionalHeaderParams[key] = value
}

// WithHTTPClient adds the HTTPClient to the get asset params
func (o *GetAssetParams) WithHTTPClient(client *http.Client) *GetAssetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get asset params
func (o *GetAssetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncludeFees adds the includeFees to the get asset params
func (o *GetAssetParams) WithIncludeFees(includeFees *bool) *GetAssetParams {
	o.SetIncludeFees(includeFees)
	return o
}

// SetIncludeFees adds the includeFees to the get asset params
func (o *GetAssetParams) SetIncludeFees(includeFees *bool) {
	o.IncludeFees = includeFees
}

// WithTokenAddress adds the tokenAddress to the get asset params
func (o *GetAssetParams) WithTokenAddress(tokenAddress string) *GetAssetParams {
	o.SetTokenAddress(tokenAddress)
	return o
}

// SetTokenAddress adds the tokenAddress to the get asset params
func (o *GetAssetParams) SetTokenAddress(tokenAddress string) {
	o.TokenAddress = tokenAddress
}

// WithTokenID adds the tokenID to the get asset params
func (o *GetAssetParams) WithTokenID(tokenID string) *GetAssetParams {
	o.SetTokenID(tokenID)
	return o
}

// SetTokenID adds the tokenId to the get asset params
func (o *GetAssetParams) SetTokenID(tokenID string) {
	o.TokenID = tokenID
}

// WriteToRequest writes these params to a swagger request
func (o *GetAssetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}

	for key, val := range o.AdditionalHeaderParams {
		if err := r.SetHeaderParam(key, val); err != nil {
			return err
		}
	}

	// Add SDK version header.
	if err := r.SetHeaderParam("x-sdk-version", "imx-core-sdk-golang-0.1.0"); err != nil {
		return err
	}

	var res []error

	if o.IncludeFees != nil {

		// query param include_fees
		var qrIncludeFees bool

		if o.IncludeFees != nil {
			qrIncludeFees = *o.IncludeFees
		}
		qIncludeFees := swag.FormatBool(qrIncludeFees)
		if qIncludeFees != "" {

			if err := r.SetQueryParam("include_fees", qIncludeFees); err != nil {
				return err
			}
		}
	}

	// path param token_address
	if err := r.SetPathParam("token_address", o.TokenAddress); err != nil {
		return err
	}

	// path param token_id
	if err := r.SetPathParam("token_id", o.TokenID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
