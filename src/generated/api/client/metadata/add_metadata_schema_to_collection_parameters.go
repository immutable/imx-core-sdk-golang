// Code generated by go-swagger; DO NOT EDIT.

package metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"immutable.com/imx-core-sdk-golang/api/models"
)

// NewAddMetadataSchemaToCollectionParams creates a new AddMetadataSchemaToCollectionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddMetadataSchemaToCollectionParams() *AddMetadataSchemaToCollectionParams {
	return &AddMetadataSchemaToCollectionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddMetadataSchemaToCollectionParamsWithTimeout creates a new AddMetadataSchemaToCollectionParams object
// with the ability to set a timeout on a request.
func NewAddMetadataSchemaToCollectionParamsWithTimeout(timeout time.Duration) *AddMetadataSchemaToCollectionParams {
	return &AddMetadataSchemaToCollectionParams{
		timeout: timeout,
	}
}

// NewAddMetadataSchemaToCollectionParamsWithContext creates a new AddMetadataSchemaToCollectionParams object
// with the ability to set a context for a request.
func NewAddMetadataSchemaToCollectionParamsWithContext(ctx context.Context) *AddMetadataSchemaToCollectionParams {
	return &AddMetadataSchemaToCollectionParams{
		Context: ctx,
	}
}

// NewAddMetadataSchemaToCollectionParamsWithHTTPClient creates a new AddMetadataSchemaToCollectionParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddMetadataSchemaToCollectionParamsWithHTTPClient(client *http.Client) *AddMetadataSchemaToCollectionParams {
	return &AddMetadataSchemaToCollectionParams{
		HTTPClient: client,
	}
}

/* AddMetadataSchemaToCollectionParams contains all the parameters to send to the API endpoint
   for the add metadata schema to collection operation.

   Typically these are written to a http.Request.
*/
type AddMetadataSchemaToCollectionParams struct {

	/* AddMetadataSchemaToCollectionRequest.

	   add metadata schema to a collection
	*/
	AddMetadataSchemaToCollectionRequest *models.AddMetadataSchemaToCollectionRequest

	/* IMXSignature.

	   String created by signing wallet address and timestamp
	*/
	IMXSignature string

	/* IMXTimestamp.

	   Unix Epoc timestamp
	*/
	IMXTimestamp string

	/* Address.

	   Collection contract address
	*/
	Address string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add metadata schema to collection params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddMetadataSchemaToCollectionParams) WithDefaults() *AddMetadataSchemaToCollectionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add metadata schema to collection params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddMetadataSchemaToCollectionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) WithTimeout(timeout time.Duration) *AddMetadataSchemaToCollectionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) WithContext(ctx context.Context) *AddMetadataSchemaToCollectionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) WithHTTPClient(client *http.Client) *AddMetadataSchemaToCollectionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddMetadataSchemaToCollectionRequest adds the addMetadataSchemaToCollectionRequest to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) WithAddMetadataSchemaToCollectionRequest(addMetadataSchemaToCollectionRequest *models.AddMetadataSchemaToCollectionRequest) *AddMetadataSchemaToCollectionParams {
	o.SetAddMetadataSchemaToCollectionRequest(addMetadataSchemaToCollectionRequest)
	return o
}

// SetAddMetadataSchemaToCollectionRequest adds the addMetadataSchemaToCollectionRequest to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) SetAddMetadataSchemaToCollectionRequest(addMetadataSchemaToCollectionRequest *models.AddMetadataSchemaToCollectionRequest) {
	o.AddMetadataSchemaToCollectionRequest = addMetadataSchemaToCollectionRequest
}

// WithIMXSignature adds the iMXSignature to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) WithIMXSignature(iMXSignature string) *AddMetadataSchemaToCollectionParams {
	o.SetIMXSignature(iMXSignature)
	return o
}

// SetIMXSignature adds the iMXSignature to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) SetIMXSignature(iMXSignature string) {
	o.IMXSignature = iMXSignature
}

// WithIMXTimestamp adds the iMXTimestamp to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) WithIMXTimestamp(iMXTimestamp string) *AddMetadataSchemaToCollectionParams {
	o.SetIMXTimestamp(iMXTimestamp)
	return o
}

// SetIMXTimestamp adds the iMXTimestamp to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) SetIMXTimestamp(iMXTimestamp string) {
	o.IMXTimestamp = iMXTimestamp
}

// WithAddress adds the address to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) WithAddress(address string) *AddMetadataSchemaToCollectionParams {
	o.SetAddress(address)
	return o
}

// SetAddress adds the address to the add metadata schema to collection params
func (o *AddMetadataSchemaToCollectionParams) SetAddress(address string) {
	o.Address = address
}

// WriteToRequest writes these params to a swagger request
func (o *AddMetadataSchemaToCollectionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.AddMetadataSchemaToCollectionRequest != nil {
		if err := r.SetBodyParam(o.AddMetadataSchemaToCollectionRequest); err != nil {
			return err
		}
	}

	// header param IMX-Signature
	if err := r.SetHeaderParam("IMX-Signature", o.IMXSignature); err != nil {
		return err
	}

	// header param IMX-Timestamp
	if err := r.SetHeaderParam("IMX-Timestamp", o.IMXTimestamp); err != nil {
		return err
	}

	// path param address
	if err := r.SetPathParam("address", o.Address); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
