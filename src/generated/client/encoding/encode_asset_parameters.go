// Code generated by go-swagger; DO NOT EDIT.

package encoding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"immutable.com/imx-core-sdk-golang/generated/models"
)

// NewEncodeAssetParams creates a new EncodeAssetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewEncodeAssetParams() *EncodeAssetParams {
	return &EncodeAssetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewEncodeAssetParamsWithTimeout creates a new EncodeAssetParams object
// with the ability to set a timeout on a request.
func NewEncodeAssetParamsWithTimeout(timeout time.Duration) *EncodeAssetParams {
	return &EncodeAssetParams{
		timeout: timeout,
	}
}

// NewEncodeAssetParamsWithContext creates a new EncodeAssetParams object
// with the ability to set a context for a request.
func NewEncodeAssetParamsWithContext(ctx context.Context) *EncodeAssetParams {
	return &EncodeAssetParams{
		Context: ctx,
	}
}

// NewEncodeAssetParamsWithHTTPClient creates a new EncodeAssetParams object
// with the ability to set a custom HTTPClient for a request.
func NewEncodeAssetParamsWithHTTPClient(client *http.Client) *EncodeAssetParams {
	return &EncodeAssetParams{
		HTTPClient: client,
	}
}

/* EncodeAssetParams contains all the parameters to send to the API endpoint
   for the encode asset operation.

   Typically these are written to a http.Request.
*/
type EncodeAssetParams struct {

	/* EncodeAssetRequest.

	   Encode Asset
	*/
	EncodeAssetRequest *models.EncodeAssetRequest

	/* AssetType.

	   Asset type to be encoded. (asset/mintable-asset)
	*/
	AssetType string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the encode asset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EncodeAssetParams) WithDefaults() *EncodeAssetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the encode asset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EncodeAssetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the encode asset params
func (o *EncodeAssetParams) WithTimeout(timeout time.Duration) *EncodeAssetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the encode asset params
func (o *EncodeAssetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the encode asset params
func (o *EncodeAssetParams) WithContext(ctx context.Context) *EncodeAssetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the encode asset params
func (o *EncodeAssetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the encode asset params
func (o *EncodeAssetParams) WithHTTPClient(client *http.Client) *EncodeAssetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the encode asset params
func (o *EncodeAssetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEncodeAssetRequest adds the encodeAssetRequest to the encode asset params
func (o *EncodeAssetParams) WithEncodeAssetRequest(encodeAssetRequest *models.EncodeAssetRequest) *EncodeAssetParams {
	o.SetEncodeAssetRequest(encodeAssetRequest)
	return o
}

// SetEncodeAssetRequest adds the encodeAssetRequest to the encode asset params
func (o *EncodeAssetParams) SetEncodeAssetRequest(encodeAssetRequest *models.EncodeAssetRequest) {
	o.EncodeAssetRequest = encodeAssetRequest
}

// WithAssetType adds the assetType to the encode asset params
func (o *EncodeAssetParams) WithAssetType(assetType string) *EncodeAssetParams {
	o.SetAssetType(assetType)
	return o
}

// SetAssetType adds the assetType to the encode asset params
func (o *EncodeAssetParams) SetAssetType(assetType string) {
	o.AssetType = assetType
}

// WriteToRequest writes these params to a swagger request
func (o *EncodeAssetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.EncodeAssetRequest != nil {
		if err := r.SetBodyParam(o.EncodeAssetRequest); err != nil {
			return err
		}
	}

	// path param assetType
	if err := r.SetPathParam("assetType", o.AssetType); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
