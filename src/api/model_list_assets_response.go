/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ListAssetsResponse struct for ListAssetsResponse
type ListAssetsResponse struct {
	// Generated cursor returned by previous query
	Cursor string `json:"cursor"`
	// Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
	Remaining int32 `json:"remaining"`
	// Assets matching query parameters
	Result []Asset `json:"result"`
}

// NewListAssetsResponse instantiates a new ListAssetsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAssetsResponse(cursor string, remaining int32, result []Asset) *ListAssetsResponse {
	this := ListAssetsResponse{}
	this.Cursor = cursor
	this.Remaining = remaining
	this.Result = result
	return &this
}

// NewListAssetsResponseWithDefaults instantiates a new ListAssetsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAssetsResponseWithDefaults() *ListAssetsResponse {
	this := ListAssetsResponse{}
	return &this
}

// GetCursor returns the Cursor field value
func (o *ListAssetsResponse) GetCursor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value
// and a boolean to check if the value has been set.
func (o *ListAssetsResponse) GetCursorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cursor, true
}

// SetCursor sets field value
func (o *ListAssetsResponse) SetCursor(v string) {
	o.Cursor = v
}

// GetRemaining returns the Remaining field value
func (o *ListAssetsResponse) GetRemaining() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Remaining
}

// GetRemainingOk returns a tuple with the Remaining field value
// and a boolean to check if the value has been set.
func (o *ListAssetsResponse) GetRemainingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Remaining, true
}

// SetRemaining sets field value
func (o *ListAssetsResponse) SetRemaining(v int32) {
	o.Remaining = v
}

// GetResult returns the Result field value
func (o *ListAssetsResponse) GetResult() []Asset {
	if o == nil {
		var ret []Asset
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *ListAssetsResponse) GetResultOk() ([]Asset, bool) {
	if o == nil {
		return nil, false
	}
	return o.Result, true
}

// SetResult sets field value
func (o *ListAssetsResponse) SetResult(v []Asset) {
	o.Result = v
}

func (o ListAssetsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cursor"] = o.Cursor
	}
	if true {
		toSerialize["remaining"] = o.Remaining
	}
	if true {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}

type NullableListAssetsResponse struct {
	value *ListAssetsResponse
	isSet bool
}

func (v NullableListAssetsResponse) Get() *ListAssetsResponse {
	return v.value
}

func (v *NullableListAssetsResponse) Set(val *ListAssetsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListAssetsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListAssetsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAssetsResponse(val *ListAssetsResponse) *NullableListAssetsResponse {
	return &NullableListAssetsResponse{value: val, isSet: true}
}

func (v NullableListAssetsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAssetsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


