/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateCollectionRequest struct for CreateCollectionRequest
type CreateCollectionRequest struct {
	// URL of the tile image for this collection
	CollectionImageUrl *string `json:"collection_image_url,omitempty"`
	// Ethereum address of the ERC721 contract
	ContractAddress string `json:"contract_address"`
	// Description of the collection
	Description *string `json:"description,omitempty"`
	// URL of the icon for this collection
	IconUrl *string `json:"icon_url,omitempty"`
	// URL of the metadata for this collection
	MetadataApiUrl *string `json:"metadata_api_url,omitempty"`
	// Name of the collection
	Name string `json:"name"`
	// Owner Public Key: The public key of the owner of the contract
	OwnerPublicKey string `json:"owner_public_key"`
}

// NewCreateCollectionRequest instantiates a new CreateCollectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCollectionRequest(contractAddress string, name string, ownerPublicKey string) *CreateCollectionRequest {
	this := CreateCollectionRequest{}
	this.ContractAddress = contractAddress
	this.Name = name
	this.OwnerPublicKey = ownerPublicKey
	return &this
}

// NewCreateCollectionRequestWithDefaults instantiates a new CreateCollectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCollectionRequestWithDefaults() *CreateCollectionRequest {
	this := CreateCollectionRequest{}
	return &this
}

// GetCollectionImageUrl returns the CollectionImageUrl field value if set, zero value otherwise.
func (o *CreateCollectionRequest) GetCollectionImageUrl() string {
	if o == nil || o.CollectionImageUrl == nil {
		var ret string
		return ret
	}
	return *o.CollectionImageUrl
}

// GetCollectionImageUrlOk returns a tuple with the CollectionImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCollectionRequest) GetCollectionImageUrlOk() (*string, bool) {
	if o == nil || o.CollectionImageUrl == nil {
		return nil, false
	}
	return o.CollectionImageUrl, true
}

// HasCollectionImageUrl returns a boolean if a field has been set.
func (o *CreateCollectionRequest) HasCollectionImageUrl() bool {
	if o != nil && o.CollectionImageUrl != nil {
		return true
	}

	return false
}

// SetCollectionImageUrl gets a reference to the given string and assigns it to the CollectionImageUrl field.
func (o *CreateCollectionRequest) SetCollectionImageUrl(v string) {
	o.CollectionImageUrl = &v
}

// GetContractAddress returns the ContractAddress field value
func (o *CreateCollectionRequest) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *CreateCollectionRequest) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *CreateCollectionRequest) SetContractAddress(v string) {
	o.ContractAddress = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateCollectionRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCollectionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateCollectionRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateCollectionRequest) SetDescription(v string) {
	o.Description = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *CreateCollectionRequest) GetIconUrl() string {
	if o == nil || o.IconUrl == nil {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCollectionRequest) GetIconUrlOk() (*string, bool) {
	if o == nil || o.IconUrl == nil {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *CreateCollectionRequest) HasIconUrl() bool {
	if o != nil && o.IconUrl != nil {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *CreateCollectionRequest) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetMetadataApiUrl returns the MetadataApiUrl field value if set, zero value otherwise.
func (o *CreateCollectionRequest) GetMetadataApiUrl() string {
	if o == nil || o.MetadataApiUrl == nil {
		var ret string
		return ret
	}
	return *o.MetadataApiUrl
}

// GetMetadataApiUrlOk returns a tuple with the MetadataApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCollectionRequest) GetMetadataApiUrlOk() (*string, bool) {
	if o == nil || o.MetadataApiUrl == nil {
		return nil, false
	}
	return o.MetadataApiUrl, true
}

// HasMetadataApiUrl returns a boolean if a field has been set.
func (o *CreateCollectionRequest) HasMetadataApiUrl() bool {
	if o != nil && o.MetadataApiUrl != nil {
		return true
	}

	return false
}

// SetMetadataApiUrl gets a reference to the given string and assigns it to the MetadataApiUrl field.
func (o *CreateCollectionRequest) SetMetadataApiUrl(v string) {
	o.MetadataApiUrl = &v
}

// GetName returns the Name field value
func (o *CreateCollectionRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCollectionRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCollectionRequest) SetName(v string) {
	o.Name = v
}

// GetOwnerPublicKey returns the OwnerPublicKey field value
func (o *CreateCollectionRequest) GetOwnerPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerPublicKey
}

// GetOwnerPublicKeyOk returns a tuple with the OwnerPublicKey field value
// and a boolean to check if the value has been set.
func (o *CreateCollectionRequest) GetOwnerPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerPublicKey, true
}

// SetOwnerPublicKey sets field value
func (o *CreateCollectionRequest) SetOwnerPublicKey(v string) {
	o.OwnerPublicKey = v
}

func (o CreateCollectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CollectionImageUrl != nil {
		toSerialize["collection_image_url"] = o.CollectionImageUrl
	}
	if true {
		toSerialize["contract_address"] = o.ContractAddress
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.IconUrl != nil {
		toSerialize["icon_url"] = o.IconUrl
	}
	if o.MetadataApiUrl != nil {
		toSerialize["metadata_api_url"] = o.MetadataApiUrl
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["owner_public_key"] = o.OwnerPublicKey
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCollectionRequest struct {
	value *CreateCollectionRequest
	isSet bool
}

func (v NullableCreateCollectionRequest) Get() *CreateCollectionRequest {
	return v.value
}

func (v *NullableCreateCollectionRequest) Set(val *CreateCollectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCollectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCollectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCollectionRequest(val *CreateCollectionRequest) *NullableCreateCollectionRequest {
	return &NullableCreateCollectionRequest{value: val, isSet: true}
}

func (v NullableCreateCollectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCollectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


