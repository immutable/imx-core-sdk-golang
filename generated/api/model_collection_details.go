/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1
Contact: support@github.com/immutable/
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CollectionDetails struct for CollectionDetails
type CollectionDetails struct {
	// URL of the icon of the collection
	IconUrl NullableString `json:"icon_url"`
	// Name of the collection
	Name string `json:"name"`
}

// NewCollectionDetails instantiates a new CollectionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionDetails(iconUrl NullableString, name string) *CollectionDetails {
	this := CollectionDetails{}
	this.IconUrl = iconUrl
	this.Name = name
	return &this
}

// NewCollectionDetailsWithDefaults instantiates a new CollectionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionDetailsWithDefaults() *CollectionDetails {
	this := CollectionDetails{}
	return &this
}

// GetIconUrl returns the IconUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CollectionDetails) GetIconUrl() string {
	if o == nil || o.IconUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.IconUrl.Get()
}

// GetIconUrlOk returns a tuple with the IconUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CollectionDetails) GetIconUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IconUrl.Get(), o.IconUrl.IsSet()
}

// SetIconUrl sets field value
func (o *CollectionDetails) SetIconUrl(v string) {
	o.IconUrl.Set(&v)
}

// GetName returns the Name field value
func (o *CollectionDetails) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CollectionDetails) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CollectionDetails) SetName(v string) {
	o.Name = v
}

func (o CollectionDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["icon_url"] = o.IconUrl.Get()
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionDetails struct {
	value *CollectionDetails
	isSet bool
}

func (v NullableCollectionDetails) Get() *CollectionDetails {
	return v.value
}

func (v *NullableCollectionDetails) Set(val *CollectionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionDetails(val *CollectionDetails) *NullableCollectionDetails {
	return &NullableCollectionDetails{value: val, isSet: true}
}

func (v NullableCollectionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


