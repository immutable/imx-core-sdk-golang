/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1
Contact: support@github.com/immutable/
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GetSignableWithdrawalRequest struct for GetSignableWithdrawalRequest
type GetSignableWithdrawalRequest struct {
	// Amount of the token to withdraw
	Amount string `json:"amount"`
	Token SignableToken `json:"token"`
	// Ethereum address of the user who is making this withdrawal
	User string `json:"user"`
}

// NewGetSignableWithdrawalRequest instantiates a new GetSignableWithdrawalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSignableWithdrawalRequest(amount string, token SignableToken, user string) *GetSignableWithdrawalRequest {
	this := GetSignableWithdrawalRequest{}
	this.Amount = amount
	this.Token = token
	this.User = user
	return &this
}

// NewGetSignableWithdrawalRequestWithDefaults instantiates a new GetSignableWithdrawalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSignableWithdrawalRequestWithDefaults() *GetSignableWithdrawalRequest {
	this := GetSignableWithdrawalRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *GetSignableWithdrawalRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *GetSignableWithdrawalRequest) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *GetSignableWithdrawalRequest) SetAmount(v string) {
	o.Amount = v
}

// GetToken returns the Token field value
func (o *GetSignableWithdrawalRequest) GetToken() SignableToken {
	if o == nil {
		var ret SignableToken
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *GetSignableWithdrawalRequest) GetTokenOk() (*SignableToken, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *GetSignableWithdrawalRequest) SetToken(v SignableToken) {
	o.Token = v
}

// GetUser returns the User field value
func (o *GetSignableWithdrawalRequest) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *GetSignableWithdrawalRequest) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *GetSignableWithdrawalRequest) SetUser(v string) {
	o.User = v
}

func (o GetSignableWithdrawalRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableGetSignableWithdrawalRequest struct {
	value *GetSignableWithdrawalRequest
	isSet bool
}

func (v NullableGetSignableWithdrawalRequest) Get() *GetSignableWithdrawalRequest {
	return v.value
}

func (v *NullableGetSignableWithdrawalRequest) Set(val *GetSignableWithdrawalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSignableWithdrawalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSignableWithdrawalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSignableWithdrawalRequest(val *GetSignableWithdrawalRequest) *NullableGetSignableWithdrawalRequest {
	return &NullableGetSignableWithdrawalRequest{value: val, isSet: true}
}

func (v NullableGetSignableWithdrawalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSignableWithdrawalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


