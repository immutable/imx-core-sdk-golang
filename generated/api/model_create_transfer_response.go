/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1
Contact: support@github.com/immutable/
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateTransferResponse struct for CreateTransferResponse
type CreateTransferResponse struct {
	// List of transfer IDs
	TransferIds []int32 `json:"transfer_ids"`
}

// NewCreateTransferResponse instantiates a new CreateTransferResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransferResponse(transferIds []int32) *CreateTransferResponse {
	this := CreateTransferResponse{}
	this.TransferIds = transferIds
	return &this
}

// NewCreateTransferResponseWithDefaults instantiates a new CreateTransferResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransferResponseWithDefaults() *CreateTransferResponse {
	this := CreateTransferResponse{}
	return &this
}

// GetTransferIds returns the TransferIds field value
func (o *CreateTransferResponse) GetTransferIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.TransferIds
}

// GetTransferIdsOk returns a tuple with the TransferIds field value
// and a boolean to check if the value has been set.
func (o *CreateTransferResponse) GetTransferIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransferIds, true
}

// SetTransferIds sets field value
func (o *CreateTransferResponse) SetTransferIds(v []int32) {
	o.TransferIds = v
}

func (o CreateTransferResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transfer_ids"] = o.TransferIds
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTransferResponse struct {
	value *CreateTransferResponse
	isSet bool
}

func (v NullableCreateTransferResponse) Get() *CreateTransferResponse {
	return v.value
}

func (v *NullableCreateTransferResponse) Set(val *CreateTransferResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTransferResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTransferResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTransferResponse(val *CreateTransferResponse) *NullableCreateTransferResponse {
	return &NullableCreateTransferResponse{value: val, isSet: true}
}

func (v NullableCreateTransferResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTransferResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


