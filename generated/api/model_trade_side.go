/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1
Contact: support@github.com/immutable/
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TradeSide struct for TradeSide
type TradeSide struct {
	// The ID of the order involved in the trade
	OrderId int32 `json:"order_id"`
	// The amount of that order's asset this trade sold
	Sold string `json:"sold"`
	// The contract address of the token that this trade sold
	TokenAddress *string `json:"token_address,omitempty"`
	// The ID of the token that this trade sold
	TokenId *string `json:"token_id,omitempty"`
	// The type of the token that this trade sold
	TokenType string `json:"token_type"`
}

// NewTradeSide instantiates a new TradeSide object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTradeSide(orderId int32, sold string, tokenType string) *TradeSide {
	this := TradeSide{}
	this.OrderId = orderId
	this.Sold = sold
	this.TokenType = tokenType
	return &this
}

// NewTradeSideWithDefaults instantiates a new TradeSide object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTradeSideWithDefaults() *TradeSide {
	this := TradeSide{}
	return &this
}

// GetOrderId returns the OrderId field value
func (o *TradeSide) GetOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *TradeSide) GetOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *TradeSide) SetOrderId(v int32) {
	o.OrderId = v
}

// GetSold returns the Sold field value
func (o *TradeSide) GetSold() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sold
}

// GetSoldOk returns a tuple with the Sold field value
// and a boolean to check if the value has been set.
func (o *TradeSide) GetSoldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sold, true
}

// SetSold sets field value
func (o *TradeSide) SetSold(v string) {
	o.Sold = v
}

// GetTokenAddress returns the TokenAddress field value if set, zero value otherwise.
func (o *TradeSide) GetTokenAddress() string {
	if o == nil || o.TokenAddress == nil {
		var ret string
		return ret
	}
	return *o.TokenAddress
}

// GetTokenAddressOk returns a tuple with the TokenAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeSide) GetTokenAddressOk() (*string, bool) {
	if o == nil || o.TokenAddress == nil {
		return nil, false
	}
	return o.TokenAddress, true
}

// HasTokenAddress returns a boolean if a field has been set.
func (o *TradeSide) HasTokenAddress() bool {
	if o != nil && o.TokenAddress != nil {
		return true
	}

	return false
}

// SetTokenAddress gets a reference to the given string and assigns it to the TokenAddress field.
func (o *TradeSide) SetTokenAddress(v string) {
	o.TokenAddress = &v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *TradeSide) GetTokenId() string {
	if o == nil || o.TokenId == nil {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeSide) GetTokenIdOk() (*string, bool) {
	if o == nil || o.TokenId == nil {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *TradeSide) HasTokenId() bool {
	if o != nil && o.TokenId != nil {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *TradeSide) SetTokenId(v string) {
	o.TokenId = &v
}

// GetTokenType returns the TokenType field value
func (o *TradeSide) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *TradeSide) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *TradeSide) SetTokenType(v string) {
	o.TokenType = v
}

func (o TradeSide) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["order_id"] = o.OrderId
	}
	if true {
		toSerialize["sold"] = o.Sold
	}
	if o.TokenAddress != nil {
		toSerialize["token_address"] = o.TokenAddress
	}
	if o.TokenId != nil {
		toSerialize["token_id"] = o.TokenId
	}
	if true {
		toSerialize["token_type"] = o.TokenType
	}
	return json.Marshal(toSerialize)
}

type NullableTradeSide struct {
	value *TradeSide
	isSet bool
}

func (v NullableTradeSide) Get() *TradeSide {
	return v.value
}

func (v *NullableTradeSide) Set(val *TradeSide) {
	v.value = val
	v.isSet = true
}

func (v NullableTradeSide) IsSet() bool {
	return v.isSet
}

func (v *NullableTradeSide) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTradeSide(val *TradeSide) *NullableTradeSide {
	return &NullableTradeSide{value: val, isSet: true}
}

func (v NullableTradeSide) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTradeSide) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


