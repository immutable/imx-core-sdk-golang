// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListCollectionFiltersParams creates a new ListCollectionFiltersParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListCollectionFiltersParams() *ListCollectionFiltersParams {
	return &ListCollectionFiltersParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListCollectionFiltersParamsWithTimeout creates a new ListCollectionFiltersParams object
// with the ability to set a timeout on a request.
func NewListCollectionFiltersParamsWithTimeout(timeout time.Duration) *ListCollectionFiltersParams {
	return &ListCollectionFiltersParams{
		timeout: timeout,
	}
}

// NewListCollectionFiltersParamsWithContext creates a new ListCollectionFiltersParams object
// with the ability to set a context for a request.
func NewListCollectionFiltersParamsWithContext(ctx context.Context) *ListCollectionFiltersParams {
	return &ListCollectionFiltersParams{
		Context: ctx,
	}
}

// NewListCollectionFiltersParamsWithHTTPClient creates a new ListCollectionFiltersParams object
// with the ability to set a custom HTTPClient for a request.
func NewListCollectionFiltersParamsWithHTTPClient(client *http.Client) *ListCollectionFiltersParams {
	return &ListCollectionFiltersParams{
		HTTPClient: client,
	}
}

/* ListCollectionFiltersParams contains all the parameters to send to the API endpoint
   for the list collection filters operation.

   Typically these are written to a http.Request.
*/
type ListCollectionFiltersParams struct {

	/* Address.

	   Collection contract address
	*/
	Address string

	/* NextPageToken.

	   Next page token
	*/
	NextPageToken *string

	/* PageSize.

	   Page size of the result
	*/
	PageSize *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list collection filters params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListCollectionFiltersParams) WithDefaults() *ListCollectionFiltersParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list collection filters params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListCollectionFiltersParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list collection filters params
func (o *ListCollectionFiltersParams) WithTimeout(timeout time.Duration) *ListCollectionFiltersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list collection filters params
func (o *ListCollectionFiltersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list collection filters params
func (o *ListCollectionFiltersParams) WithContext(ctx context.Context) *ListCollectionFiltersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list collection filters params
func (o *ListCollectionFiltersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list collection filters params
func (o *ListCollectionFiltersParams) WithHTTPClient(client *http.Client) *ListCollectionFiltersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list collection filters params
func (o *ListCollectionFiltersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddress adds the address to the list collection filters params
func (o *ListCollectionFiltersParams) WithAddress(address string) *ListCollectionFiltersParams {
	o.SetAddress(address)
	return o
}

// SetAddress adds the address to the list collection filters params
func (o *ListCollectionFiltersParams) SetAddress(address string) {
	o.Address = address
}

// WithNextPageToken adds the nextPageToken to the list collection filters params
func (o *ListCollectionFiltersParams) WithNextPageToken(nextPageToken *string) *ListCollectionFiltersParams {
	o.SetNextPageToken(nextPageToken)
	return o
}

// SetNextPageToken adds the nextPageToken to the list collection filters params
func (o *ListCollectionFiltersParams) SetNextPageToken(nextPageToken *string) {
	o.NextPageToken = nextPageToken
}

// WithPageSize adds the pageSize to the list collection filters params
func (o *ListCollectionFiltersParams) WithPageSize(pageSize *int64) *ListCollectionFiltersParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the list collection filters params
func (o *ListCollectionFiltersParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WriteToRequest writes these params to a swagger request
func (o *ListCollectionFiltersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param address
	if err := r.SetPathParam("address", o.Address); err != nil {
		return err
	}

	if o.NextPageToken != nil {

		// query param next_page_token
		var qrNextPageToken string

		if o.NextPageToken != nil {
			qrNextPageToken = *o.NextPageToken
		}
		qNextPageToken := qrNextPageToken
		if qNextPageToken != "" {

			if err := r.SetQueryParam("next_page_token", qNextPageToken); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
