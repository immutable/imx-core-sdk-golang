// Code generated by go-swagger; DO NOT EDIT.

package trades

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"generated/models"
)

// NewCreateTradeParams creates a new CreateTradeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateTradeParams() *CreateTradeParams {
	return &CreateTradeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateTradeParamsWithTimeout creates a new CreateTradeParams object
// with the ability to set a timeout on a request.
func NewCreateTradeParamsWithTimeout(timeout time.Duration) *CreateTradeParams {
	return &CreateTradeParams{
		timeout: timeout,
	}
}

// NewCreateTradeParamsWithContext creates a new CreateTradeParams object
// with the ability to set a context for a request.
func NewCreateTradeParamsWithContext(ctx context.Context) *CreateTradeParams {
	return &CreateTradeParams{
		Context: ctx,
	}
}

// NewCreateTradeParamsWithHTTPClient creates a new CreateTradeParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateTradeParamsWithHTTPClient(client *http.Client) *CreateTradeParams {
	return &CreateTradeParams{
		HTTPClient: client,
	}
}

/* CreateTradeParams contains all the parameters to send to the API endpoint
   for the create trade operation.

   Typically these are written to a http.Request.
*/
type CreateTradeParams struct {

	/* CreateTradeRequest.

	   create a trade
	*/
	CreateTradeRequest *models.CreateTradeRequestV1

	/* XImxEthAddress.

	   eth address
	*/
	XImxEthAddress *string

	/* XImxEthSignature.

	   eth signature
	*/
	XImxEthSignature *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create trade params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateTradeParams) WithDefaults() *CreateTradeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create trade params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateTradeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create trade params
func (o *CreateTradeParams) WithTimeout(timeout time.Duration) *CreateTradeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create trade params
func (o *CreateTradeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create trade params
func (o *CreateTradeParams) WithContext(ctx context.Context) *CreateTradeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create trade params
func (o *CreateTradeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create trade params
func (o *CreateTradeParams) WithHTTPClient(client *http.Client) *CreateTradeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create trade params
func (o *CreateTradeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateTradeRequest adds the createTradeRequest to the create trade params
func (o *CreateTradeParams) WithCreateTradeRequest(createTradeRequest *models.CreateTradeRequestV1) *CreateTradeParams {
	o.SetCreateTradeRequest(createTradeRequest)
	return o
}

// SetCreateTradeRequest adds the createTradeRequest to the create trade params
func (o *CreateTradeParams) SetCreateTradeRequest(createTradeRequest *models.CreateTradeRequestV1) {
	o.CreateTradeRequest = createTradeRequest
}

// WithXImxEthAddress adds the xImxEthAddress to the create trade params
func (o *CreateTradeParams) WithXImxEthAddress(xImxEthAddress *string) *CreateTradeParams {
	o.SetXImxEthAddress(xImxEthAddress)
	return o
}

// SetXImxEthAddress adds the xImxEthAddress to the create trade params
func (o *CreateTradeParams) SetXImxEthAddress(xImxEthAddress *string) {
	o.XImxEthAddress = xImxEthAddress
}

// WithXImxEthSignature adds the xImxEthSignature to the create trade params
func (o *CreateTradeParams) WithXImxEthSignature(xImxEthSignature *string) *CreateTradeParams {
	o.SetXImxEthSignature(xImxEthSignature)
	return o
}

// SetXImxEthSignature adds the xImxEthSignature to the create trade params
func (o *CreateTradeParams) SetXImxEthSignature(xImxEthSignature *string) {
	o.XImxEthSignature = xImxEthSignature
}

// WriteToRequest writes these params to a swagger request
func (o *CreateTradeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.CreateTradeRequest != nil {
		if err := r.SetBodyParam(o.CreateTradeRequest); err != nil {
			return err
		}
	}

	if o.XImxEthAddress != nil {

		// header param x-imx-eth-address
		if err := r.SetHeaderParam("x-imx-eth-address", *o.XImxEthAddress); err != nil {
			return err
		}
	}

	if o.XImxEthSignature != nil {

		// header param x-imx-eth-signature
		if err := r.SetHeaderParam("x-imx-eth-signature", *o.XImxEthSignature); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
