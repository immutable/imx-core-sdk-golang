// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrderParams creates a new GetOrderParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrderParams() *GetOrderParams {
	return &GetOrderParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrderParamsWithTimeout creates a new GetOrderParams object
// with the ability to set a timeout on a request.
func NewGetOrderParamsWithTimeout(timeout time.Duration) *GetOrderParams {
	return &GetOrderParams{
		timeout: timeout,
	}
}

// NewGetOrderParamsWithContext creates a new GetOrderParams object
// with the ability to set a context for a request.
func NewGetOrderParamsWithContext(ctx context.Context) *GetOrderParams {
	return &GetOrderParams{
		Context: ctx,
	}
}

// NewGetOrderParamsWithHTTPClient creates a new GetOrderParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrderParamsWithHTTPClient(client *http.Client) *GetOrderParams {
	return &GetOrderParams{
		HTTPClient: client,
	}
}

/* GetOrderParams contains all the parameters to send to the API endpoint
   for the get order operation.

   Typically these are written to a http.Request.
*/
type GetOrderParams struct {

	/* AuxiliaryFeePercentages.

	   Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients
	*/
	AuxiliaryFeePercentages *string

	/* AuxiliaryFeeRecipients.

	   Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages
	*/
	AuxiliaryFeeRecipients *string

	/* ID.

	   Order ID
	*/
	ID string

	/* IncludeFees.

	   Set flag to true to include fee body for the order
	*/
	IncludeFees *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrderParams) WithDefaults() *GetOrderParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrderParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get order params
func (o *GetOrderParams) WithTimeout(timeout time.Duration) *GetOrderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get order params
func (o *GetOrderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get order params
func (o *GetOrderParams) WithContext(ctx context.Context) *GetOrderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get order params
func (o *GetOrderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get order params
func (o *GetOrderParams) WithHTTPClient(client *http.Client) *GetOrderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get order params
func (o *GetOrderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuxiliaryFeePercentages adds the auxiliaryFeePercentages to the get order params
func (o *GetOrderParams) WithAuxiliaryFeePercentages(auxiliaryFeePercentages *string) *GetOrderParams {
	o.SetAuxiliaryFeePercentages(auxiliaryFeePercentages)
	return o
}

// SetAuxiliaryFeePercentages adds the auxiliaryFeePercentages to the get order params
func (o *GetOrderParams) SetAuxiliaryFeePercentages(auxiliaryFeePercentages *string) {
	o.AuxiliaryFeePercentages = auxiliaryFeePercentages
}

// WithAuxiliaryFeeRecipients adds the auxiliaryFeeRecipients to the get order params
func (o *GetOrderParams) WithAuxiliaryFeeRecipients(auxiliaryFeeRecipients *string) *GetOrderParams {
	o.SetAuxiliaryFeeRecipients(auxiliaryFeeRecipients)
	return o
}

// SetAuxiliaryFeeRecipients adds the auxiliaryFeeRecipients to the get order params
func (o *GetOrderParams) SetAuxiliaryFeeRecipients(auxiliaryFeeRecipients *string) {
	o.AuxiliaryFeeRecipients = auxiliaryFeeRecipients
}

// WithID adds the id to the get order params
func (o *GetOrderParams) WithID(id string) *GetOrderParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get order params
func (o *GetOrderParams) SetID(id string) {
	o.ID = id
}

// WithIncludeFees adds the includeFees to the get order params
func (o *GetOrderParams) WithIncludeFees(includeFees *bool) *GetOrderParams {
	o.SetIncludeFees(includeFees)
	return o
}

// SetIncludeFees adds the includeFees to the get order params
func (o *GetOrderParams) SetIncludeFees(includeFees *bool) {
	o.IncludeFees = includeFees
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AuxiliaryFeePercentages != nil {

		// query param auxiliary_fee_percentages
		var qrAuxiliaryFeePercentages string

		if o.AuxiliaryFeePercentages != nil {
			qrAuxiliaryFeePercentages = *o.AuxiliaryFeePercentages
		}
		qAuxiliaryFeePercentages := qrAuxiliaryFeePercentages
		if qAuxiliaryFeePercentages != "" {

			if err := r.SetQueryParam("auxiliary_fee_percentages", qAuxiliaryFeePercentages); err != nil {
				return err
			}
		}
	}

	if o.AuxiliaryFeeRecipients != nil {

		// query param auxiliary_fee_recipients
		var qrAuxiliaryFeeRecipients string

		if o.AuxiliaryFeeRecipients != nil {
			qrAuxiliaryFeeRecipients = *o.AuxiliaryFeeRecipients
		}
		qAuxiliaryFeeRecipients := qrAuxiliaryFeeRecipients
		if qAuxiliaryFeeRecipients != "" {

			if err := r.SetQueryParam("auxiliary_fee_recipients", qAuxiliaryFeeRecipients); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.IncludeFees != nil {

		// query param include_fees
		var qrIncludeFees bool

		if o.IncludeFees != nil {
			qrIncludeFees = *o.IncludeFees
		}
		qIncludeFees := swag.FormatBool(qrIncludeFees)
		if qIncludeFees != "" {

			if err := r.SetQueryParam("include_fees", qIncludeFees); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
