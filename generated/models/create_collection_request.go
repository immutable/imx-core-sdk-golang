// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateCollectionRequest create collection request
//
// swagger:model CreateCollectionRequest
type CreateCollectionRequest struct {

	// URL of the tile image for this collection
	CollectionImageURL string `json:"collection_image_url,omitempty"`

	// Ethereum address of the ERC721 contract
	// Required: true
	ContractAddress *string `json:"contract_address"`

	// Description of the collection
	Description string `json:"description,omitempty"`

	// URL of the icon for this collection
	IconURL string `json:"icon_url,omitempty"`

	// URL of the metadata for this collection
	MetadataAPIURL string `json:"metadata_api_url,omitempty"`

	// Name of the collection
	// Required: true
	Name *string `json:"name"`

	// Owner Public Key: The public key of the owner of the contract
	// Required: true
	OwnerPublicKey *string `json:"owner_public_key"`
}

// Validate validates this create collection request
func (m *CreateCollectionRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContractAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOwnerPublicKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateCollectionRequest) validateContractAddress(formats strfmt.Registry) error {

	if err := validate.Required("contract_address", "body", m.ContractAddress); err != nil {
		return err
	}

	return nil
}

func (m *CreateCollectionRequest) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *CreateCollectionRequest) validateOwnerPublicKey(formats strfmt.Registry) error {

	if err := validate.Required("owner_public_key", "body", m.OwnerPublicKey); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create collection request based on context it is used
func (m *CreateCollectionRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateCollectionRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateCollectionRequest) UnmarshalBinary(b []byte) error {
	var res CreateCollectionRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
