/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CreateOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrderRequest{}

// CreateOrderRequest struct for CreateOrderRequest
type CreateOrderRequest struct {
	// Amount to buy
	AmountBuy string `json:"amount_buy"`
	// Amount to sell
	AmountSell string `json:"amount_sell"`
	// ID of the asset to buy
	AssetIdBuy string `json:"asset_id_buy"`
	// ID of the asset to sell
	AssetIdSell string `json:"asset_id_sell"`
	// Expiration timestamp for this order
	ExpirationTimestamp int32 `json:"expiration_timestamp"`
	// Fee information
	Fees []FeeEntry `json:"fees,omitempty"`
	// Whether to include fees in order
	IncludeFees *bool `json:"include_fees,omitempty"`
	// Nonce of the order
	Nonce int32 `json:"nonce"`
	// Public stark key of the user creating order
	StarkKey string `json:"stark_key"`
	// Payload signature
	StarkSignature string `json:"stark_signature"`
	// ID of the vault into which the bought asset will be placed
	VaultIdBuy int32 `json:"vault_id_buy"`
	// ID of the vault to sell from
	VaultIdSell int32 `json:"vault_id_sell"`
}

// NewCreateOrderRequest instantiates a new CreateOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderRequest(amountBuy string, amountSell string, assetIdBuy string, assetIdSell string, expirationTimestamp int32, nonce int32, starkKey string, starkSignature string, vaultIdBuy int32, vaultIdSell int32) *CreateOrderRequest {
	this := CreateOrderRequest{}
	this.AmountBuy = amountBuy
	this.AmountSell = amountSell
	this.AssetIdBuy = assetIdBuy
	this.AssetIdSell = assetIdSell
	this.ExpirationTimestamp = expirationTimestamp
	this.Nonce = nonce
	this.StarkKey = starkKey
	this.StarkSignature = starkSignature
	this.VaultIdBuy = vaultIdBuy
	this.VaultIdSell = vaultIdSell
	return &this
}

// NewCreateOrderRequestWithDefaults instantiates a new CreateOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderRequestWithDefaults() *CreateOrderRequest {
	this := CreateOrderRequest{}
	return &this
}

// GetAmountBuy returns the AmountBuy field value
func (o *CreateOrderRequest) GetAmountBuy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmountBuy
}

// GetAmountBuyOk returns a tuple with the AmountBuy field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetAmountBuyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountBuy, true
}

// SetAmountBuy sets field value
func (o *CreateOrderRequest) SetAmountBuy(v string) {
	o.AmountBuy = v
}

// GetAmountSell returns the AmountSell field value
func (o *CreateOrderRequest) GetAmountSell() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmountSell
}

// GetAmountSellOk returns a tuple with the AmountSell field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetAmountSellOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountSell, true
}

// SetAmountSell sets field value
func (o *CreateOrderRequest) SetAmountSell(v string) {
	o.AmountSell = v
}

// GetAssetIdBuy returns the AssetIdBuy field value
func (o *CreateOrderRequest) GetAssetIdBuy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetIdBuy
}

// GetAssetIdBuyOk returns a tuple with the AssetIdBuy field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetAssetIdBuyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetIdBuy, true
}

// SetAssetIdBuy sets field value
func (o *CreateOrderRequest) SetAssetIdBuy(v string) {
	o.AssetIdBuy = v
}

// GetAssetIdSell returns the AssetIdSell field value
func (o *CreateOrderRequest) GetAssetIdSell() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetIdSell
}

// GetAssetIdSellOk returns a tuple with the AssetIdSell field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetAssetIdSellOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetIdSell, true
}

// SetAssetIdSell sets field value
func (o *CreateOrderRequest) SetAssetIdSell(v string) {
	o.AssetIdSell = v
}

// GetExpirationTimestamp returns the ExpirationTimestamp field value
func (o *CreateOrderRequest) GetExpirationTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpirationTimestamp
}

// GetExpirationTimestampOk returns a tuple with the ExpirationTimestamp field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetExpirationTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationTimestamp, true
}

// SetExpirationTimestamp sets field value
func (o *CreateOrderRequest) SetExpirationTimestamp(v int32) {
	o.ExpirationTimestamp = v
}

// GetFees returns the Fees field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetFees() []FeeEntry {
	if o == nil || isNil(o.Fees) {
		var ret []FeeEntry
		return ret
	}
	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetFeesOk() ([]FeeEntry, bool) {
	if o == nil || isNil(o.Fees) {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasFees() bool {
	if o != nil && !isNil(o.Fees) {
		return true
	}

	return false
}

// SetFees gets a reference to the given []FeeEntry and assigns it to the Fees field.
func (o *CreateOrderRequest) SetFees(v []FeeEntry) {
	o.Fees = v
}

// GetIncludeFees returns the IncludeFees field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetIncludeFees() bool {
	if o == nil || isNil(o.IncludeFees) {
		var ret bool
		return ret
	}
	return *o.IncludeFees
}

// GetIncludeFeesOk returns a tuple with the IncludeFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetIncludeFeesOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeFees) {
		return nil, false
	}
	return o.IncludeFees, true
}

// HasIncludeFees returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasIncludeFees() bool {
	if o != nil && !isNil(o.IncludeFees) {
		return true
	}

	return false
}

// SetIncludeFees gets a reference to the given bool and assigns it to the IncludeFees field.
func (o *CreateOrderRequest) SetIncludeFees(v bool) {
	o.IncludeFees = &v
}

// GetNonce returns the Nonce field value
func (o *CreateOrderRequest) GetNonce() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetNonceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *CreateOrderRequest) SetNonce(v int32) {
	o.Nonce = v
}

// GetStarkKey returns the StarkKey field value
func (o *CreateOrderRequest) GetStarkKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StarkKey
}

// GetStarkKeyOk returns a tuple with the StarkKey field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetStarkKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StarkKey, true
}

// SetStarkKey sets field value
func (o *CreateOrderRequest) SetStarkKey(v string) {
	o.StarkKey = v
}

// GetStarkSignature returns the StarkSignature field value
func (o *CreateOrderRequest) GetStarkSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StarkSignature
}

// GetStarkSignatureOk returns a tuple with the StarkSignature field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetStarkSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StarkSignature, true
}

// SetStarkSignature sets field value
func (o *CreateOrderRequest) SetStarkSignature(v string) {
	o.StarkSignature = v
}

// GetVaultIdBuy returns the VaultIdBuy field value
func (o *CreateOrderRequest) GetVaultIdBuy() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VaultIdBuy
}

// GetVaultIdBuyOk returns a tuple with the VaultIdBuy field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetVaultIdBuyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VaultIdBuy, true
}

// SetVaultIdBuy sets field value
func (o *CreateOrderRequest) SetVaultIdBuy(v int32) {
	o.VaultIdBuy = v
}

// GetVaultIdSell returns the VaultIdSell field value
func (o *CreateOrderRequest) GetVaultIdSell() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VaultIdSell
}

// GetVaultIdSellOk returns a tuple with the VaultIdSell field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetVaultIdSellOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VaultIdSell, true
}

// SetVaultIdSell sets field value
func (o *CreateOrderRequest) SetVaultIdSell(v int32) {
	o.VaultIdSell = v
}

func (o CreateOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount_buy"] = o.AmountBuy
	toSerialize["amount_sell"] = o.AmountSell
	toSerialize["asset_id_buy"] = o.AssetIdBuy
	toSerialize["asset_id_sell"] = o.AssetIdSell
	toSerialize["expiration_timestamp"] = o.ExpirationTimestamp
	if !isNil(o.Fees) {
		toSerialize["fees"] = o.Fees
	}
	if !isNil(o.IncludeFees) {
		toSerialize["include_fees"] = o.IncludeFees
	}
	toSerialize["nonce"] = o.Nonce
	toSerialize["stark_key"] = o.StarkKey
	toSerialize["stark_signature"] = o.StarkSignature
	toSerialize["vault_id_buy"] = o.VaultIdBuy
	toSerialize["vault_id_sell"] = o.VaultIdSell
	return toSerialize, nil
}

type NullableCreateOrderRequest struct {
	value *CreateOrderRequest
	isSet bool
}

func (v NullableCreateOrderRequest) Get() *CreateOrderRequest {
	return v.value
}

func (v *NullableCreateOrderRequest) Set(val *CreateOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderRequest(val *CreateOrderRequest) *NullableCreateOrderRequest {
	return &NullableCreateOrderRequest{value: val, isSet: true}
}

func (v NullableCreateOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


