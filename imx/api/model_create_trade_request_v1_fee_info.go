/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateTradeRequestV1FeeInfo Fee details
type CreateTradeRequestV1FeeInfo struct {
	// ID of the asset these fees relate to
	AssetId string `json:"asset_id"`
	// Fee limit
	FeeLimit string `json:"fee_limit"`
	// ID of vault the asset belong to
	SourceVaultId int32 `json:"source_vault_id"`
}

// NewCreateTradeRequestV1FeeInfo instantiates a new CreateTradeRequestV1FeeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradeRequestV1FeeInfo(assetId string, feeLimit string, sourceVaultId int32) *CreateTradeRequestV1FeeInfo {
	this := CreateTradeRequestV1FeeInfo{}
	this.AssetId = assetId
	this.FeeLimit = feeLimit
	this.SourceVaultId = sourceVaultId
	return &this
}

// NewCreateTradeRequestV1FeeInfoWithDefaults instantiates a new CreateTradeRequestV1FeeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradeRequestV1FeeInfoWithDefaults() *CreateTradeRequestV1FeeInfo {
	this := CreateTradeRequestV1FeeInfo{}
	return &this
}

// GetAssetId returns the AssetId field value
func (o *CreateTradeRequestV1FeeInfo) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *CreateTradeRequestV1FeeInfo) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *CreateTradeRequestV1FeeInfo) SetAssetId(v string) {
	o.AssetId = v
}

// GetFeeLimit returns the FeeLimit field value
func (o *CreateTradeRequestV1FeeInfo) GetFeeLimit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeeLimit
}

// GetFeeLimitOk returns a tuple with the FeeLimit field value
// and a boolean to check if the value has been set.
func (o *CreateTradeRequestV1FeeInfo) GetFeeLimitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeLimit, true
}

// SetFeeLimit sets field value
func (o *CreateTradeRequestV1FeeInfo) SetFeeLimit(v string) {
	o.FeeLimit = v
}

// GetSourceVaultId returns the SourceVaultId field value
func (o *CreateTradeRequestV1FeeInfo) GetSourceVaultId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SourceVaultId
}

// GetSourceVaultIdOk returns a tuple with the SourceVaultId field value
// and a boolean to check if the value has been set.
func (o *CreateTradeRequestV1FeeInfo) GetSourceVaultIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceVaultId, true
}

// SetSourceVaultId sets field value
func (o *CreateTradeRequestV1FeeInfo) SetSourceVaultId(v int32) {
	o.SourceVaultId = v
}

func (o CreateTradeRequestV1FeeInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["asset_id"] = o.AssetId
	}
	if true {
		toSerialize["fee_limit"] = o.FeeLimit
	}
	if true {
		toSerialize["source_vault_id"] = o.SourceVaultId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTradeRequestV1FeeInfo struct {
	value *CreateTradeRequestV1FeeInfo
	isSet bool
}

func (v NullableCreateTradeRequestV1FeeInfo) Get() *CreateTradeRequestV1FeeInfo {
	return v.value
}

func (v *NullableCreateTradeRequestV1FeeInfo) Set(val *CreateTradeRequestV1FeeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradeRequestV1FeeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradeRequestV1FeeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradeRequestV1FeeInfo(val *CreateTradeRequestV1FeeInfo) *NullableCreateTradeRequestV1FeeInfo {
	return &NullableCreateTradeRequestV1FeeInfo{value: val, isSet: true}
}

func (v NullableCreateTradeRequestV1FeeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradeRequestV1FeeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


