/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// UpdateCollectionRequest struct for UpdateCollectionRequest
type UpdateCollectionRequest struct {
	// URL of the tile image for this collection
	CollectionImageUrl *string `json:"collection_image_url,omitempty"`
	// Description of the collection
	Description *string `json:"description,omitempty"`
	// URL of the icon for this collection
	IconUrl *string `json:"icon_url,omitempty"`
	// URL of the metadata for this collection
	MetadataApiUrl *string `json:"metadata_api_url,omitempty"`
	// Name of the collection
	Name *string `json:"name,omitempty"`
}

// NewUpdateCollectionRequest instantiates a new UpdateCollectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCollectionRequest() *UpdateCollectionRequest {
	this := UpdateCollectionRequest{}
	return &this
}

// NewUpdateCollectionRequestWithDefaults instantiates a new UpdateCollectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCollectionRequestWithDefaults() *UpdateCollectionRequest {
	this := UpdateCollectionRequest{}
	return &this
}

// GetCollectionImageUrl returns the CollectionImageUrl field value if set, zero value otherwise.
func (o *UpdateCollectionRequest) GetCollectionImageUrl() string {
	if o == nil || o.CollectionImageUrl == nil {
		var ret string
		return ret
	}
	return *o.CollectionImageUrl
}

// GetCollectionImageUrlOk returns a tuple with the CollectionImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCollectionRequest) GetCollectionImageUrlOk() (*string, bool) {
	if o == nil || o.CollectionImageUrl == nil {
		return nil, false
	}
	return o.CollectionImageUrl, true
}

// HasCollectionImageUrl returns a boolean if a field has been set.
func (o *UpdateCollectionRequest) HasCollectionImageUrl() bool {
	if o != nil && o.CollectionImageUrl != nil {
		return true
	}

	return false
}

// SetCollectionImageUrl gets a reference to the given string and assigns it to the CollectionImageUrl field.
func (o *UpdateCollectionRequest) SetCollectionImageUrl(v string) {
	o.CollectionImageUrl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateCollectionRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCollectionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateCollectionRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateCollectionRequest) SetDescription(v string) {
	o.Description = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *UpdateCollectionRequest) GetIconUrl() string {
	if o == nil || o.IconUrl == nil {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCollectionRequest) GetIconUrlOk() (*string, bool) {
	if o == nil || o.IconUrl == nil {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *UpdateCollectionRequest) HasIconUrl() bool {
	if o != nil && o.IconUrl != nil {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *UpdateCollectionRequest) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetMetadataApiUrl returns the MetadataApiUrl field value if set, zero value otherwise.
func (o *UpdateCollectionRequest) GetMetadataApiUrl() string {
	if o == nil || o.MetadataApiUrl == nil {
		var ret string
		return ret
	}
	return *o.MetadataApiUrl
}

// GetMetadataApiUrlOk returns a tuple with the MetadataApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCollectionRequest) GetMetadataApiUrlOk() (*string, bool) {
	if o == nil || o.MetadataApiUrl == nil {
		return nil, false
	}
	return o.MetadataApiUrl, true
}

// HasMetadataApiUrl returns a boolean if a field has been set.
func (o *UpdateCollectionRequest) HasMetadataApiUrl() bool {
	if o != nil && o.MetadataApiUrl != nil {
		return true
	}

	return false
}

// SetMetadataApiUrl gets a reference to the given string and assigns it to the MetadataApiUrl field.
func (o *UpdateCollectionRequest) SetMetadataApiUrl(v string) {
	o.MetadataApiUrl = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateCollectionRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCollectionRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateCollectionRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateCollectionRequest) SetName(v string) {
	o.Name = &v
}

func (o UpdateCollectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CollectionImageUrl != nil {
		toSerialize["collection_image_url"] = o.CollectionImageUrl
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.IconUrl != nil {
		toSerialize["icon_url"] = o.IconUrl
	}
	if o.MetadataApiUrl != nil {
		toSerialize["metadata_api_url"] = o.MetadataApiUrl
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateCollectionRequest struct {
	value *UpdateCollectionRequest
	isSet bool
}

func (v NullableUpdateCollectionRequest) Get() *UpdateCollectionRequest {
	return v.value
}

func (v *NullableUpdateCollectionRequest) Set(val *UpdateCollectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCollectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCollectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCollectionRequest(val *UpdateCollectionRequest) *NullableUpdateCollectionRequest {
	return &NullableUpdateCollectionRequest{value: val, isSet: true}
}

func (v NullableUpdateCollectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCollectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


