/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the FeeEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeeEntry{}

// FeeEntry struct for FeeEntry
type FeeEntry struct {
	Address *string `json:"address,omitempty"`
	FeePercentage *float32 `json:"fee_percentage,omitempty"`
}

// NewFeeEntry instantiates a new FeeEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeEntry() *FeeEntry {
	this := FeeEntry{}
	return &this
}

// NewFeeEntryWithDefaults instantiates a new FeeEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeEntryWithDefaults() *FeeEntry {
	this := FeeEntry{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *FeeEntry) GetAddress() string {
	if o == nil || isNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeEntry) GetAddressOk() (*string, bool) {
	if o == nil || isNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *FeeEntry) HasAddress() bool {
	if o != nil && !isNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *FeeEntry) SetAddress(v string) {
	o.Address = &v
}

// GetFeePercentage returns the FeePercentage field value if set, zero value otherwise.
func (o *FeeEntry) GetFeePercentage() float32 {
	if o == nil || isNil(o.FeePercentage) {
		var ret float32
		return ret
	}
	return *o.FeePercentage
}

// GetFeePercentageOk returns a tuple with the FeePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeEntry) GetFeePercentageOk() (*float32, bool) {
	if o == nil || isNil(o.FeePercentage) {
		return nil, false
	}
	return o.FeePercentage, true
}

// HasFeePercentage returns a boolean if a field has been set.
func (o *FeeEntry) HasFeePercentage() bool {
	if o != nil && !isNil(o.FeePercentage) {
		return true
	}

	return false
}

// SetFeePercentage gets a reference to the given float32 and assigns it to the FeePercentage field.
func (o *FeeEntry) SetFeePercentage(v float32) {
	o.FeePercentage = &v
}

func (o FeeEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeeEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !isNil(o.FeePercentage) {
		toSerialize["fee_percentage"] = o.FeePercentage
	}
	return toSerialize, nil
}

type NullableFeeEntry struct {
	value *FeeEntry
	isSet bool
}

func (v NullableFeeEntry) Get() *FeeEntry {
	return v.value
}

func (v *NullableFeeEntry) Set(val *FeeEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeEntry(val *FeeEntry) *NullableFeeEntry {
	return &NullableFeeEntry{value: val, isSet: true}
}

func (v NullableFeeEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


