/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateWithdrawalRequest struct for CreateWithdrawalRequest
type CreateWithdrawalRequest struct {
	// Amount to withdraw
	Amount string `json:"amount"`
	// The ID of asset the user is withdrawing
	AssetId string `json:"asset_id"`
	// Nonce of the withdrawal
	Nonce int32 `json:"nonce"`
	// Public stark key of the withdrawing user
	StarkKey string `json:"stark_key"`
	// Payload signature
	StarkSignature string `json:"stark_signature"`
	// The ID of the vault the asset belong to
	VaultId int32 `json:"vault_id"`
}

// NewCreateWithdrawalRequest instantiates a new CreateWithdrawalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWithdrawalRequest(amount string, assetId string, nonce int32, starkKey string, starkSignature string, vaultId int32) *CreateWithdrawalRequest {
	this := CreateWithdrawalRequest{}
	this.Amount = amount
	this.AssetId = assetId
	this.Nonce = nonce
	this.StarkKey = starkKey
	this.StarkSignature = starkSignature
	this.VaultId = vaultId
	return &this
}

// NewCreateWithdrawalRequestWithDefaults instantiates a new CreateWithdrawalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWithdrawalRequestWithDefaults() *CreateWithdrawalRequest {
	this := CreateWithdrawalRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *CreateWithdrawalRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreateWithdrawalRequest) GetAmountOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreateWithdrawalRequest) SetAmount(v string) {
	o.Amount = v
}

// GetAssetId returns the AssetId field value
func (o *CreateWithdrawalRequest) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *CreateWithdrawalRequest) GetAssetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *CreateWithdrawalRequest) SetAssetId(v string) {
	o.AssetId = v
}

// GetNonce returns the Nonce field value
func (o *CreateWithdrawalRequest) GetNonce() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *CreateWithdrawalRequest) GetNonceOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *CreateWithdrawalRequest) SetNonce(v int32) {
	o.Nonce = v
}

// GetStarkKey returns the StarkKey field value
func (o *CreateWithdrawalRequest) GetStarkKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StarkKey
}

// GetStarkKeyOk returns a tuple with the StarkKey field value
// and a boolean to check if the value has been set.
func (o *CreateWithdrawalRequest) GetStarkKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.StarkKey, true
}

// SetStarkKey sets field value
func (o *CreateWithdrawalRequest) SetStarkKey(v string) {
	o.StarkKey = v
}

// GetStarkSignature returns the StarkSignature field value
func (o *CreateWithdrawalRequest) GetStarkSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StarkSignature
}

// GetStarkSignatureOk returns a tuple with the StarkSignature field value
// and a boolean to check if the value has been set.
func (o *CreateWithdrawalRequest) GetStarkSignatureOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.StarkSignature, true
}

// SetStarkSignature sets field value
func (o *CreateWithdrawalRequest) SetStarkSignature(v string) {
	o.StarkSignature = v
}

// GetVaultId returns the VaultId field value
func (o *CreateWithdrawalRequest) GetVaultId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VaultId
}

// GetVaultIdOk returns a tuple with the VaultId field value
// and a boolean to check if the value has been set.
func (o *CreateWithdrawalRequest) GetVaultIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.VaultId, true
}

// SetVaultId sets field value
func (o *CreateWithdrawalRequest) SetVaultId(v int32) {
	o.VaultId = v
}

func (o CreateWithdrawalRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["asset_id"] = o.AssetId
	}
	if true {
		toSerialize["nonce"] = o.Nonce
	}
	if true {
		toSerialize["stark_key"] = o.StarkKey
	}
	if true {
		toSerialize["stark_signature"] = o.StarkSignature
	}
	if true {
		toSerialize["vault_id"] = o.VaultId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateWithdrawalRequest struct {
	value *CreateWithdrawalRequest
	isSet bool
}

func (v NullableCreateWithdrawalRequest) Get() *CreateWithdrawalRequest {
	return v.value
}

func (v *NullableCreateWithdrawalRequest) Set(val *CreateWithdrawalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWithdrawalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWithdrawalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWithdrawalRequest(val *CreateWithdrawalRequest) *NullableCreateWithdrawalRequest {
	return &NullableCreateWithdrawalRequest{value: val, isSet: true}
}

func (v NullableCreateWithdrawalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWithdrawalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


