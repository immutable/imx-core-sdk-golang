/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CreateWithdrawalResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateWithdrawalResponse{}

// CreateWithdrawalResponse struct for CreateWithdrawalResponse
type CreateWithdrawalResponse struct {
	// Status of the withdrawal
	Status string `json:"status"`
	// Time of the withdrawal
	Time int32 `json:"time"`
	// ID of the withdrawal
	WithdrawalId int32 `json:"withdrawal_id"`
}

// NewCreateWithdrawalResponse instantiates a new CreateWithdrawalResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWithdrawalResponse(status string, time int32, withdrawalId int32) *CreateWithdrawalResponse {
	this := CreateWithdrawalResponse{}
	this.Status = status
	this.Time = time
	this.WithdrawalId = withdrawalId
	return &this
}

// NewCreateWithdrawalResponseWithDefaults instantiates a new CreateWithdrawalResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWithdrawalResponseWithDefaults() *CreateWithdrawalResponse {
	this := CreateWithdrawalResponse{}
	return &this
}

// GetStatus returns the Status field value
func (o *CreateWithdrawalResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CreateWithdrawalResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CreateWithdrawalResponse) SetStatus(v string) {
	o.Status = v
}

// GetTime returns the Time field value
func (o *CreateWithdrawalResponse) GetTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *CreateWithdrawalResponse) GetTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *CreateWithdrawalResponse) SetTime(v int32) {
	o.Time = v
}

// GetWithdrawalId returns the WithdrawalId field value
func (o *CreateWithdrawalResponse) GetWithdrawalId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WithdrawalId
}

// GetWithdrawalIdOk returns a tuple with the WithdrawalId field value
// and a boolean to check if the value has been set.
func (o *CreateWithdrawalResponse) GetWithdrawalIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WithdrawalId, true
}

// SetWithdrawalId sets field value
func (o *CreateWithdrawalResponse) SetWithdrawalId(v int32) {
	o.WithdrawalId = v
}

func (o CreateWithdrawalResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateWithdrawalResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["time"] = o.Time
	toSerialize["withdrawal_id"] = o.WithdrawalId
	return toSerialize, nil
}

type NullableCreateWithdrawalResponse struct {
	value *CreateWithdrawalResponse
	isSet bool
}

func (v NullableCreateWithdrawalResponse) Get() *CreateWithdrawalResponse {
	return v.value
}

func (v *NullableCreateWithdrawalResponse) Set(val *CreateWithdrawalResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWithdrawalResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWithdrawalResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWithdrawalResponse(val *CreateWithdrawalResponse) *NullableCreateWithdrawalResponse {
	return &NullableCreateWithdrawalResponse{value: val, isSet: true}
}

func (v NullableCreateWithdrawalResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWithdrawalResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


