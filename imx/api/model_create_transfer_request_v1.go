/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateTransferRequestV1 struct for CreateTransferRequestV1
type CreateTransferRequestV1 struct {
	// Amount to transfer
	Amount string `json:"amount"`
	// ID of the asset to transfer
	AssetId string `json:"asset_id"`
	// Expiration timestamp for this transfer
	ExpirationTimestamp int32 `json:"expiration_timestamp"`
	// Nonce of the transfer
	Nonce int32 `json:"nonce"`
	// Public stark key of the user receiving the transfer
	ReceiverStarkKey string `json:"receiver_stark_key"`
	// ID of the vault into which the asset will be transferred to
	ReceiverVaultId int32 `json:"receiver_vault_id"`
	// Public stark key of the user sending the transfer
	SenderStarkKey string `json:"sender_stark_key"`
	// ID of the vault into which the asset is from
	SenderVaultId int32 `json:"sender_vault_id"`
	// Transfer payload signature
	StarkSignature string `json:"stark_signature"`
}

// NewCreateTransferRequestV1 instantiates a new CreateTransferRequestV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransferRequestV1(amount string, assetId string, expirationTimestamp int32, nonce int32, receiverStarkKey string, receiverVaultId int32, senderStarkKey string, senderVaultId int32, starkSignature string) *CreateTransferRequestV1 {
	this := CreateTransferRequestV1{}
	this.Amount = amount
	this.AssetId = assetId
	this.ExpirationTimestamp = expirationTimestamp
	this.Nonce = nonce
	this.ReceiverStarkKey = receiverStarkKey
	this.ReceiverVaultId = receiverVaultId
	this.SenderStarkKey = senderStarkKey
	this.SenderVaultId = senderVaultId
	this.StarkSignature = starkSignature
	return &this
}

// NewCreateTransferRequestV1WithDefaults instantiates a new CreateTransferRequestV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransferRequestV1WithDefaults() *CreateTransferRequestV1 {
	this := CreateTransferRequestV1{}
	return &this
}

// GetAmount returns the Amount field value
func (o *CreateTransferRequestV1) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequestV1) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreateTransferRequestV1) SetAmount(v string) {
	o.Amount = v
}

// GetAssetId returns the AssetId field value
func (o *CreateTransferRequestV1) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequestV1) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *CreateTransferRequestV1) SetAssetId(v string) {
	o.AssetId = v
}

// GetExpirationTimestamp returns the ExpirationTimestamp field value
func (o *CreateTransferRequestV1) GetExpirationTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpirationTimestamp
}

// GetExpirationTimestampOk returns a tuple with the ExpirationTimestamp field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequestV1) GetExpirationTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationTimestamp, true
}

// SetExpirationTimestamp sets field value
func (o *CreateTransferRequestV1) SetExpirationTimestamp(v int32) {
	o.ExpirationTimestamp = v
}

// GetNonce returns the Nonce field value
func (o *CreateTransferRequestV1) GetNonce() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequestV1) GetNonceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *CreateTransferRequestV1) SetNonce(v int32) {
	o.Nonce = v
}

// GetReceiverStarkKey returns the ReceiverStarkKey field value
func (o *CreateTransferRequestV1) GetReceiverStarkKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceiverStarkKey
}

// GetReceiverStarkKeyOk returns a tuple with the ReceiverStarkKey field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequestV1) GetReceiverStarkKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiverStarkKey, true
}

// SetReceiverStarkKey sets field value
func (o *CreateTransferRequestV1) SetReceiverStarkKey(v string) {
	o.ReceiverStarkKey = v
}

// GetReceiverVaultId returns the ReceiverVaultId field value
func (o *CreateTransferRequestV1) GetReceiverVaultId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReceiverVaultId
}

// GetReceiverVaultIdOk returns a tuple with the ReceiverVaultId field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequestV1) GetReceiverVaultIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiverVaultId, true
}

// SetReceiverVaultId sets field value
func (o *CreateTransferRequestV1) SetReceiverVaultId(v int32) {
	o.ReceiverVaultId = v
}

// GetSenderStarkKey returns the SenderStarkKey field value
func (o *CreateTransferRequestV1) GetSenderStarkKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SenderStarkKey
}

// GetSenderStarkKeyOk returns a tuple with the SenderStarkKey field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequestV1) GetSenderStarkKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderStarkKey, true
}

// SetSenderStarkKey sets field value
func (o *CreateTransferRequestV1) SetSenderStarkKey(v string) {
	o.SenderStarkKey = v
}

// GetSenderVaultId returns the SenderVaultId field value
func (o *CreateTransferRequestV1) GetSenderVaultId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SenderVaultId
}

// GetSenderVaultIdOk returns a tuple with the SenderVaultId field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequestV1) GetSenderVaultIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderVaultId, true
}

// SetSenderVaultId sets field value
func (o *CreateTransferRequestV1) SetSenderVaultId(v int32) {
	o.SenderVaultId = v
}

// GetStarkSignature returns the StarkSignature field value
func (o *CreateTransferRequestV1) GetStarkSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StarkSignature
}

// GetStarkSignatureOk returns a tuple with the StarkSignature field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequestV1) GetStarkSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StarkSignature, true
}

// SetStarkSignature sets field value
func (o *CreateTransferRequestV1) SetStarkSignature(v string) {
	o.StarkSignature = v
}

func (o CreateTransferRequestV1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["asset_id"] = o.AssetId
	}
	if true {
		toSerialize["expiration_timestamp"] = o.ExpirationTimestamp
	}
	if true {
		toSerialize["nonce"] = o.Nonce
	}
	if true {
		toSerialize["receiver_stark_key"] = o.ReceiverStarkKey
	}
	if true {
		toSerialize["receiver_vault_id"] = o.ReceiverVaultId
	}
	if true {
		toSerialize["sender_stark_key"] = o.SenderStarkKey
	}
	if true {
		toSerialize["sender_vault_id"] = o.SenderVaultId
	}
	if true {
		toSerialize["stark_signature"] = o.StarkSignature
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTransferRequestV1 struct {
	value *CreateTransferRequestV1
	isSet bool
}

func (v NullableCreateTransferRequestV1) Get() *CreateTransferRequestV1 {
	return v.value
}

func (v *NullableCreateTransferRequestV1) Set(val *CreateTransferRequestV1) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTransferRequestV1) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTransferRequestV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTransferRequestV1(val *CreateTransferRequestV1) *NullableCreateTransferRequestV1 {
	return &NullableCreateTransferRequestV1{value: val, isSet: true}
}

func (v NullableCreateTransferRequestV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTransferRequestV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


