/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the EncodeAssetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EncodeAssetResponse{}

// EncodeAssetResponse struct for EncodeAssetResponse
type EncodeAssetResponse struct {
	// Stark encoded asset id
	AssetId string `json:"asset_id"`
	// Stark encoded asset type
	AssetType string `json:"asset_type"`
}

// NewEncodeAssetResponse instantiates a new EncodeAssetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEncodeAssetResponse(assetId string, assetType string) *EncodeAssetResponse {
	this := EncodeAssetResponse{}
	this.AssetId = assetId
	this.AssetType = assetType
	return &this
}

// NewEncodeAssetResponseWithDefaults instantiates a new EncodeAssetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEncodeAssetResponseWithDefaults() *EncodeAssetResponse {
	this := EncodeAssetResponse{}
	return &this
}

// GetAssetId returns the AssetId field value
func (o *EncodeAssetResponse) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *EncodeAssetResponse) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *EncodeAssetResponse) SetAssetId(v string) {
	o.AssetId = v
}

// GetAssetType returns the AssetType field value
func (o *EncodeAssetResponse) GetAssetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value
// and a boolean to check if the value has been set.
func (o *EncodeAssetResponse) GetAssetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetType, true
}

// SetAssetType sets field value
func (o *EncodeAssetResponse) SetAssetType(v string) {
	o.AssetType = v
}

func (o EncodeAssetResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EncodeAssetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_id"] = o.AssetId
	toSerialize["asset_type"] = o.AssetType
	return toSerialize, nil
}

type NullableEncodeAssetResponse struct {
	value *EncodeAssetResponse
	isSet bool
}

func (v NullableEncodeAssetResponse) Get() *EncodeAssetResponse {
	return v.value
}

func (v *NullableEncodeAssetResponse) Set(val *EncodeAssetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEncodeAssetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEncodeAssetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEncodeAssetResponse(val *EncodeAssetResponse) *NullableEncodeAssetResponse {
	return &NullableEncodeAssetResponse{value: val, isSet: true}
}

func (v NullableEncodeAssetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEncodeAssetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


