/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the Collection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Collection{}

// Collection struct for Collection
type Collection struct {
	// Ethereum address of the ERC721 contract
	Address string `json:"address"`
	// URL of the tile image for this collection
	CollectionImageUrl NullableString `json:"collection_image_url"`
	// Timestamp of when the collection was created
	CreatedAt NullableString `json:"created_at"`
	// Description of the collection
	Description NullableString `json:"description"`
	// URL of the icon for this collection
	IconUrl NullableString `json:"icon_url"`
	// URL of the metadata for this collection
	MetadataApiUrl NullableString `json:"metadata_api_url"`
	// Name of the collection
	Name string `json:"name"`
	// The collection's project ID
	ProjectId int32 `json:"project_id"`
	// Project owner address
	ProjectOwnerAddress string `json:"project_owner_address"`
	// Timestamp of when the collection was updated
	UpdatedAt NullableString `json:"updated_at"`
}

// NewCollection instantiates a new Collection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollection(address string, collectionImageUrl NullableString, createdAt NullableString, description NullableString, iconUrl NullableString, metadataApiUrl NullableString, name string, projectId int32, projectOwnerAddress string, updatedAt NullableString) *Collection {
	this := Collection{}
	this.Address = address
	this.CollectionImageUrl = collectionImageUrl
	this.CreatedAt = createdAt
	this.Description = description
	this.IconUrl = iconUrl
	this.MetadataApiUrl = metadataApiUrl
	this.Name = name
	this.ProjectId = projectId
	this.ProjectOwnerAddress = projectOwnerAddress
	this.UpdatedAt = updatedAt
	return &this
}

// NewCollectionWithDefaults instantiates a new Collection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionWithDefaults() *Collection {
	this := Collection{}
	return &this
}

// GetAddress returns the Address field value
func (o *Collection) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *Collection) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *Collection) SetAddress(v string) {
	o.Address = v
}

// GetCollectionImageUrl returns the CollectionImageUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Collection) GetCollectionImageUrl() string {
	if o == nil || o.CollectionImageUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.CollectionImageUrl.Get()
}

// GetCollectionImageUrlOk returns a tuple with the CollectionImageUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Collection) GetCollectionImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectionImageUrl.Get(), o.CollectionImageUrl.IsSet()
}

// SetCollectionImageUrl sets field value
func (o *Collection) SetCollectionImageUrl(v string) {
	o.CollectionImageUrl.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Collection) GetCreatedAt() string {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Collection) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *Collection) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Collection) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Collection) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *Collection) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetIconUrl returns the IconUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Collection) GetIconUrl() string {
	if o == nil || o.IconUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.IconUrl.Get()
}

// GetIconUrlOk returns a tuple with the IconUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Collection) GetIconUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IconUrl.Get(), o.IconUrl.IsSet()
}

// SetIconUrl sets field value
func (o *Collection) SetIconUrl(v string) {
	o.IconUrl.Set(&v)
}

// GetMetadataApiUrl returns the MetadataApiUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Collection) GetMetadataApiUrl() string {
	if o == nil || o.MetadataApiUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.MetadataApiUrl.Get()
}

// GetMetadataApiUrlOk returns a tuple with the MetadataApiUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Collection) GetMetadataApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetadataApiUrl.Get(), o.MetadataApiUrl.IsSet()
}

// SetMetadataApiUrl sets field value
func (o *Collection) SetMetadataApiUrl(v string) {
	o.MetadataApiUrl.Set(&v)
}

// GetName returns the Name field value
func (o *Collection) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Collection) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Collection) SetName(v string) {
	o.Name = v
}

// GetProjectId returns the ProjectId field value
func (o *Collection) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *Collection) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *Collection) SetProjectId(v int32) {
	o.ProjectId = v
}

// GetProjectOwnerAddress returns the ProjectOwnerAddress field value
func (o *Collection) GetProjectOwnerAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectOwnerAddress
}

// GetProjectOwnerAddressOk returns a tuple with the ProjectOwnerAddress field value
// and a boolean to check if the value has been set.
func (o *Collection) GetProjectOwnerAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectOwnerAddress, true
}

// SetProjectOwnerAddress sets field value
func (o *Collection) SetProjectOwnerAddress(v string) {
	o.ProjectOwnerAddress = v
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Collection) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Collection) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *Collection) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}

func (o Collection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Collection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["collection_image_url"] = o.CollectionImageUrl.Get()
	toSerialize["created_at"] = o.CreatedAt.Get()
	toSerialize["description"] = o.Description.Get()
	toSerialize["icon_url"] = o.IconUrl.Get()
	toSerialize["metadata_api_url"] = o.MetadataApiUrl.Get()
	toSerialize["name"] = o.Name
	toSerialize["project_id"] = o.ProjectId
	toSerialize["project_owner_address"] = o.ProjectOwnerAddress
	toSerialize["updated_at"] = o.UpdatedAt.Get()
	return toSerialize, nil
}

type NullableCollection struct {
	value *Collection
	isSet bool
}

func (v NullableCollection) Get() *Collection {
	return v.value
}

func (v *NullableCollection) Set(val *Collection) {
	v.value = val
	v.isSet = true
}

func (v NullableCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollection(val *Collection) *NullableCollection {
	return &NullableCollection{value: val, isSet: true}
}

func (v NullableCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


