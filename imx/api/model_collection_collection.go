/*
Immutable X API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
Contact: support@immutable.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CollectionCollection struct for CollectionCollection
type CollectionCollection struct {
	Address *string `json:"address,omitempty"`
	CollectionImageURL *string `json:"collectionImageURL,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	Description *string `json:"description,omitempty"`
	IconURL *string `json:"iconURL,omitempty"`
	LastCollectionEventID *string `json:"lastCollectionEventID,omitempty"`
	MetadataAPIURL *string `json:"metadataAPIURL,omitempty"`
	Name *string `json:"name,omitempty"`
	ProjectID *int32 `json:"projectID,omitempty"`
	ProjectOwnerAddress *string `json:"projectOwnerAddress,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

// NewCollectionCollection instantiates a new CollectionCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionCollection() *CollectionCollection {
	this := CollectionCollection{}
	return &this
}

// NewCollectionCollectionWithDefaults instantiates a new CollectionCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionCollectionWithDefaults() *CollectionCollection {
	this := CollectionCollection{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CollectionCollection) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CollectionCollection) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *CollectionCollection) SetAddress(v string) {
	o.Address = &v
}

// GetCollectionImageURL returns the CollectionImageURL field value if set, zero value otherwise.
func (o *CollectionCollection) GetCollectionImageURL() string {
	if o == nil || o.CollectionImageURL == nil {
		var ret string
		return ret
	}
	return *o.CollectionImageURL
}

// GetCollectionImageURLOk returns a tuple with the CollectionImageURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetCollectionImageURLOk() (*string, bool) {
	if o == nil || o.CollectionImageURL == nil {
		return nil, false
	}
	return o.CollectionImageURL, true
}

// HasCollectionImageURL returns a boolean if a field has been set.
func (o *CollectionCollection) HasCollectionImageURL() bool {
	if o != nil && o.CollectionImageURL != nil {
		return true
	}

	return false
}

// SetCollectionImageURL gets a reference to the given string and assigns it to the CollectionImageURL field.
func (o *CollectionCollection) SetCollectionImageURL(v string) {
	o.CollectionImageURL = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CollectionCollection) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CollectionCollection) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CollectionCollection) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CollectionCollection) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CollectionCollection) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CollectionCollection) SetDescription(v string) {
	o.Description = &v
}

// GetIconURL returns the IconURL field value if set, zero value otherwise.
func (o *CollectionCollection) GetIconURL() string {
	if o == nil || o.IconURL == nil {
		var ret string
		return ret
	}
	return *o.IconURL
}

// GetIconURLOk returns a tuple with the IconURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetIconURLOk() (*string, bool) {
	if o == nil || o.IconURL == nil {
		return nil, false
	}
	return o.IconURL, true
}

// HasIconURL returns a boolean if a field has been set.
func (o *CollectionCollection) HasIconURL() bool {
	if o != nil && o.IconURL != nil {
		return true
	}

	return false
}

// SetIconURL gets a reference to the given string and assigns it to the IconURL field.
func (o *CollectionCollection) SetIconURL(v string) {
	o.IconURL = &v
}

// GetLastCollectionEventID returns the LastCollectionEventID field value if set, zero value otherwise.
func (o *CollectionCollection) GetLastCollectionEventID() string {
	if o == nil || o.LastCollectionEventID == nil {
		var ret string
		return ret
	}
	return *o.LastCollectionEventID
}

// GetLastCollectionEventIDOk returns a tuple with the LastCollectionEventID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetLastCollectionEventIDOk() (*string, bool) {
	if o == nil || o.LastCollectionEventID == nil {
		return nil, false
	}
	return o.LastCollectionEventID, true
}

// HasLastCollectionEventID returns a boolean if a field has been set.
func (o *CollectionCollection) HasLastCollectionEventID() bool {
	if o != nil && o.LastCollectionEventID != nil {
		return true
	}

	return false
}

// SetLastCollectionEventID gets a reference to the given string and assigns it to the LastCollectionEventID field.
func (o *CollectionCollection) SetLastCollectionEventID(v string) {
	o.LastCollectionEventID = &v
}

// GetMetadataAPIURL returns the MetadataAPIURL field value if set, zero value otherwise.
func (o *CollectionCollection) GetMetadataAPIURL() string {
	if o == nil || o.MetadataAPIURL == nil {
		var ret string
		return ret
	}
	return *o.MetadataAPIURL
}

// GetMetadataAPIURLOk returns a tuple with the MetadataAPIURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetMetadataAPIURLOk() (*string, bool) {
	if o == nil || o.MetadataAPIURL == nil {
		return nil, false
	}
	return o.MetadataAPIURL, true
}

// HasMetadataAPIURL returns a boolean if a field has been set.
func (o *CollectionCollection) HasMetadataAPIURL() bool {
	if o != nil && o.MetadataAPIURL != nil {
		return true
	}

	return false
}

// SetMetadataAPIURL gets a reference to the given string and assigns it to the MetadataAPIURL field.
func (o *CollectionCollection) SetMetadataAPIURL(v string) {
	o.MetadataAPIURL = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CollectionCollection) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CollectionCollection) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CollectionCollection) SetName(v string) {
	o.Name = &v
}

// GetProjectID returns the ProjectID field value if set, zero value otherwise.
func (o *CollectionCollection) GetProjectID() int32 {
	if o == nil || o.ProjectID == nil {
		var ret int32
		return ret
	}
	return *o.ProjectID
}

// GetProjectIDOk returns a tuple with the ProjectID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetProjectIDOk() (*int32, bool) {
	if o == nil || o.ProjectID == nil {
		return nil, false
	}
	return o.ProjectID, true
}

// HasProjectID returns a boolean if a field has been set.
func (o *CollectionCollection) HasProjectID() bool {
	if o != nil && o.ProjectID != nil {
		return true
	}

	return false
}

// SetProjectID gets a reference to the given int32 and assigns it to the ProjectID field.
func (o *CollectionCollection) SetProjectID(v int32) {
	o.ProjectID = &v
}

// GetProjectOwnerAddress returns the ProjectOwnerAddress field value if set, zero value otherwise.
func (o *CollectionCollection) GetProjectOwnerAddress() string {
	if o == nil || o.ProjectOwnerAddress == nil {
		var ret string
		return ret
	}
	return *o.ProjectOwnerAddress
}

// GetProjectOwnerAddressOk returns a tuple with the ProjectOwnerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetProjectOwnerAddressOk() (*string, bool) {
	if o == nil || o.ProjectOwnerAddress == nil {
		return nil, false
	}
	return o.ProjectOwnerAddress, true
}

// HasProjectOwnerAddress returns a boolean if a field has been set.
func (o *CollectionCollection) HasProjectOwnerAddress() bool {
	if o != nil && o.ProjectOwnerAddress != nil {
		return true
	}

	return false
}

// SetProjectOwnerAddress gets a reference to the given string and assigns it to the ProjectOwnerAddress field.
func (o *CollectionCollection) SetProjectOwnerAddress(v string) {
	o.ProjectOwnerAddress = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CollectionCollection) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCollection) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CollectionCollection) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CollectionCollection) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o CollectionCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.CollectionImageURL != nil {
		toSerialize["collectionImageURL"] = o.CollectionImageURL
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.IconURL != nil {
		toSerialize["iconURL"] = o.IconURL
	}
	if o.LastCollectionEventID != nil {
		toSerialize["lastCollectionEventID"] = o.LastCollectionEventID
	}
	if o.MetadataAPIURL != nil {
		toSerialize["metadataAPIURL"] = o.MetadataAPIURL
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ProjectID != nil {
		toSerialize["projectID"] = o.ProjectID
	}
	if o.ProjectOwnerAddress != nil {
		toSerialize["projectOwnerAddress"] = o.ProjectOwnerAddress
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionCollection struct {
	value *CollectionCollection
	isSet bool
}

func (v NullableCollectionCollection) Get() *CollectionCollection {
	return v.value
}

func (v *NullableCollectionCollection) Set(val *CollectionCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionCollection(val *CollectionCollection) *NullableCollectionCollection {
	return &NullableCollectionCollection{value: val, isSet: true}
}

func (v NullableCollectionCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


